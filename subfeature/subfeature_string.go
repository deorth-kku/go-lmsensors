// Code generated by "stringer -type=SubFeature"; DO NOT EDIT.

package subfeature

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IN_INPUT-0]
	_ = x[IN_MIN-1]
	_ = x[IN_MAX-2]
	_ = x[IN_LCRIT-3]
	_ = x[IN_CRIT-4]
	_ = x[IN_AVERAGE-5]
	_ = x[IN_LOWEST-6]
	_ = x[IN_HIGHEST-7]
	_ = x[IN_ALARM-128]
	_ = x[IN_MIN_ALARM-129]
	_ = x[IN_MAX_ALARM-130]
	_ = x[IN_BEEP-131]
	_ = x[IN_LCRIT_ALARM-132]
	_ = x[IN_CRIT_ALARM-133]
	_ = x[FAN_INPUT-256]
	_ = x[FAN_MIN-257]
	_ = x[FAN_MAX-258]
	_ = x[FAN_ALARM-384]
	_ = x[FAN_FAULT-385]
	_ = x[FAN_DIV-386]
	_ = x[FAN_BEEP-387]
	_ = x[FAN_PULSES-388]
	_ = x[FAN_MIN_ALARM-389]
	_ = x[FAN_MAX_ALARM-390]
	_ = x[TEMP_INPUT-512]
	_ = x[TEMP_MAX-513]
	_ = x[TEMP_MAX_HYST-514]
	_ = x[TEMP_MIN-515]
	_ = x[TEMP_CRIT-516]
	_ = x[TEMP_CRIT_HYST-517]
	_ = x[TEMP_LCRIT-518]
	_ = x[TEMP_EMERGENCY-519]
	_ = x[TEMP_EMERGENCY_HYST-520]
	_ = x[TEMP_LOWEST-521]
	_ = x[TEMP_HIGHEST-522]
	_ = x[TEMP_MIN_HYST-523]
	_ = x[TEMP_LCRIT_HYST-524]
	_ = x[TEMP_ALARM-640]
	_ = x[TEMP_MAX_ALARM-641]
	_ = x[TEMP_MIN_ALARM-642]
	_ = x[TEMP_CRIT_ALARM-643]
	_ = x[TEMP_FAULT-644]
	_ = x[TEMP_TYPE-645]
	_ = x[TEMP_OFFSET-646]
	_ = x[TEMP_BEEP-647]
	_ = x[TEMP_EMERGENCY_ALARM-648]
	_ = x[TEMP_LCRIT_ALARM-649]
	_ = x[POWER_AVERAGE-768]
	_ = x[POWER_AVERAGE_HIGHEST-769]
	_ = x[POWER_AVERAGE_LOWEST-770]
	_ = x[POWER_INPUT-771]
	_ = x[POWER_INPUT_HIGHEST-772]
	_ = x[POWER_INPUT_LOWEST-773]
	_ = x[POWER_CAP-774]
	_ = x[POWER_CAP_HYST-775]
	_ = x[POWER_MAX-776]
	_ = x[POWER_CRIT-777]
	_ = x[POWER_MIN-778]
	_ = x[POWER_LCRIT-779]
	_ = x[POWER_AVERAGE_INTERVAL-896]
	_ = x[POWER_ALARM-897]
	_ = x[POWER_CAP_ALARM-898]
	_ = x[POWER_MAX_ALARM-899]
	_ = x[POWER_CRIT_ALARM-900]
	_ = x[POWER_MIN_ALARM-901]
	_ = x[POWER_LCRIT_ALARM-902]
	_ = x[ENERGY_INPUT-1024]
	_ = x[CURR_INPUT-1280]
	_ = x[CURR_MIN-1281]
	_ = x[CURR_MAX-1282]
	_ = x[CURR_LCRIT-1283]
	_ = x[CURR_CRIT-1284]
	_ = x[CURR_AVERAGE-1285]
	_ = x[CURR_LOWEST-1286]
	_ = x[CURR_HIGHEST-1287]
	_ = x[CURR_ALARM-1408]
	_ = x[CURR_MIN_ALARM-1409]
	_ = x[CURR_MAX_ALARM-1410]
	_ = x[CURR_BEEP-1411]
	_ = x[CURR_LCRIT_ALARM-1412]
	_ = x[CURR_CRIT_ALARM-1413]
	_ = x[HUMIDITY_INPUT-1536]
	_ = x[VID-4096]
	_ = x[INTRUSION_ALARM-4352]
	_ = x[INTRUSION_BEEP-4353]
	_ = x[BEEP_ENABLE-6144]
}

const _SubFeature_name = "IN_INPUTIN_MININ_MAXIN_LCRITIN_CRITIN_AVERAGEIN_LOWESTIN_HIGHESTIN_ALARMIN_MIN_ALARMIN_MAX_ALARMIN_BEEPIN_LCRIT_ALARMIN_CRIT_ALARMFAN_INPUTFAN_MINFAN_MAXFAN_ALARMFAN_FAULTFAN_DIVFAN_BEEPFAN_PULSESFAN_MIN_ALARMFAN_MAX_ALARMTEMP_INPUTTEMP_MAXTEMP_MAX_HYSTTEMP_MINTEMP_CRITTEMP_CRIT_HYSTTEMP_LCRITTEMP_EMERGENCYTEMP_EMERGENCY_HYSTTEMP_LOWESTTEMP_HIGHESTTEMP_MIN_HYSTTEMP_LCRIT_HYSTTEMP_ALARMTEMP_MAX_ALARMTEMP_MIN_ALARMTEMP_CRIT_ALARMTEMP_FAULTTEMP_TYPETEMP_OFFSETTEMP_BEEPTEMP_EMERGENCY_ALARMTEMP_LCRIT_ALARMPOWER_AVERAGEPOWER_AVERAGE_HIGHESTPOWER_AVERAGE_LOWESTPOWER_INPUTPOWER_INPUT_HIGHESTPOWER_INPUT_LOWESTPOWER_CAPPOWER_CAP_HYSTPOWER_MAXPOWER_CRITPOWER_MINPOWER_LCRITPOWER_AVERAGE_INTERVALPOWER_ALARMPOWER_CAP_ALARMPOWER_MAX_ALARMPOWER_CRIT_ALARMPOWER_MIN_ALARMPOWER_LCRIT_ALARMENERGY_INPUTCURR_INPUTCURR_MINCURR_MAXCURR_LCRITCURR_CRITCURR_AVERAGECURR_LOWESTCURR_HIGHESTCURR_ALARMCURR_MIN_ALARMCURR_MAX_ALARMCURR_BEEPCURR_LCRIT_ALARMCURR_CRIT_ALARMHUMIDITY_INPUTVIDINTRUSION_ALARMINTRUSION_BEEPBEEP_ENABLE"

var _SubFeature_map = map[SubFeature]string{
	0:    _SubFeature_name[0:8],
	1:    _SubFeature_name[8:14],
	2:    _SubFeature_name[14:20],
	3:    _SubFeature_name[20:28],
	4:    _SubFeature_name[28:35],
	5:    _SubFeature_name[35:45],
	6:    _SubFeature_name[45:54],
	7:    _SubFeature_name[54:64],
	128:  _SubFeature_name[64:72],
	129:  _SubFeature_name[72:84],
	130:  _SubFeature_name[84:96],
	131:  _SubFeature_name[96:103],
	132:  _SubFeature_name[103:117],
	133:  _SubFeature_name[117:130],
	256:  _SubFeature_name[130:139],
	257:  _SubFeature_name[139:146],
	258:  _SubFeature_name[146:153],
	384:  _SubFeature_name[153:162],
	385:  _SubFeature_name[162:171],
	386:  _SubFeature_name[171:178],
	387:  _SubFeature_name[178:186],
	388:  _SubFeature_name[186:196],
	389:  _SubFeature_name[196:209],
	390:  _SubFeature_name[209:222],
	512:  _SubFeature_name[222:232],
	513:  _SubFeature_name[232:240],
	514:  _SubFeature_name[240:253],
	515:  _SubFeature_name[253:261],
	516:  _SubFeature_name[261:270],
	517:  _SubFeature_name[270:284],
	518:  _SubFeature_name[284:294],
	519:  _SubFeature_name[294:308],
	520:  _SubFeature_name[308:327],
	521:  _SubFeature_name[327:338],
	522:  _SubFeature_name[338:350],
	523:  _SubFeature_name[350:363],
	524:  _SubFeature_name[363:378],
	640:  _SubFeature_name[378:388],
	641:  _SubFeature_name[388:402],
	642:  _SubFeature_name[402:416],
	643:  _SubFeature_name[416:431],
	644:  _SubFeature_name[431:441],
	645:  _SubFeature_name[441:450],
	646:  _SubFeature_name[450:461],
	647:  _SubFeature_name[461:470],
	648:  _SubFeature_name[470:490],
	649:  _SubFeature_name[490:506],
	768:  _SubFeature_name[506:519],
	769:  _SubFeature_name[519:540],
	770:  _SubFeature_name[540:560],
	771:  _SubFeature_name[560:571],
	772:  _SubFeature_name[571:590],
	773:  _SubFeature_name[590:608],
	774:  _SubFeature_name[608:617],
	775:  _SubFeature_name[617:631],
	776:  _SubFeature_name[631:640],
	777:  _SubFeature_name[640:650],
	778:  _SubFeature_name[650:659],
	779:  _SubFeature_name[659:670],
	896:  _SubFeature_name[670:692],
	897:  _SubFeature_name[692:703],
	898:  _SubFeature_name[703:718],
	899:  _SubFeature_name[718:733],
	900:  _SubFeature_name[733:749],
	901:  _SubFeature_name[749:764],
	902:  _SubFeature_name[764:781],
	1024: _SubFeature_name[781:793],
	1280: _SubFeature_name[793:803],
	1281: _SubFeature_name[803:811],
	1282: _SubFeature_name[811:819],
	1283: _SubFeature_name[819:829],
	1284: _SubFeature_name[829:838],
	1285: _SubFeature_name[838:850],
	1286: _SubFeature_name[850:861],
	1287: _SubFeature_name[861:873],
	1408: _SubFeature_name[873:883],
	1409: _SubFeature_name[883:897],
	1410: _SubFeature_name[897:911],
	1411: _SubFeature_name[911:920],
	1412: _SubFeature_name[920:936],
	1413: _SubFeature_name[936:951],
	1536: _SubFeature_name[951:965],
	4096: _SubFeature_name[965:968],
	4352: _SubFeature_name[968:983],
	4353: _SubFeature_name[983:997],
	6144: _SubFeature_name[997:1008],
}

func (i SubFeature) String() string {
	if str, ok := _SubFeature_map[i]; ok {
		return str
	}
	return "SubFeature(" + strconv.FormatInt(int64(i), 10) + ")"
}
