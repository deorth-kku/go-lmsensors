// Code generated by "stringer -type=SensorErrCode"; DO NOT EDIT.

package lmsensors

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ErrSensorWildcards - -1]
	_ = x[ErrSensorNoEntry - -2]
	_ = x[ErrSensorAccessR - -3]
	_ = x[ErrSensorKernel - -4]
	_ = x[ErrSensorDivZero - -5]
	_ = x[ErrSensorChipName - -6]
	_ = x[ErrSensorBusName - -7]
	_ = x[ErrSensorParse - -8]
	_ = x[ErrSensorAccessW - -9]
	_ = x[ErrSensorIO - -10]
	_ = x[ErrSensorRecursion - -11]
	_ = x[ErrSensorAny-2147483647]
}

const (
	_SensorErrCode_name_0 = "ErrSensorRecursionErrSensorIOErrSensorAccessWErrSensorParseErrSensorBusNameErrSensorChipNameErrSensorDivZeroErrSensorKernelErrSensorAccessRErrSensorNoEntryErrSensorWildcards"
	_SensorErrCode_name_1 = "ErrSensorAny"
)

var (
	_SensorErrCode_index_0 = [...]uint8{0, 18, 29, 45, 59, 75, 92, 108, 123, 139, 155, 173}
)

func (i SensorErrCode) String() string {
	switch {
	case -11 <= i && i <= -1:
		i -= -11
		return _SensorErrCode_name_0[_SensorErrCode_index_0[i]:_SensorErrCode_index_0[i+1]]
	case i == 2147483647:
		return _SensorErrCode_name_1
	default:
		return "SensorErrCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
